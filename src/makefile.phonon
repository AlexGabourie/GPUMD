CC = nvcc

ifdef OS # For Windows with the cl.exe compiler
CFLAGS = -O3 -arch=sm_35 -DDEBUG -Xcompiler "/wd 4819"
else # For linux
CFLAGS = -std=c++11 -O3 -arch=sm_35 -DDEBUG
endif


LFLAGS = -lcublas -lcusolver

SOURCES = main_phonon.cu phonon.cu read_file.cu error.cu \
	atom.cu neighbor.cu neighbor_ON1.cu neighbor_ON2.cu \
	force.cu potential.cu lj.cu ri.cu eam.cu sw.cu vashishta.cu fcp.cu \
	tersoff1988.cu tersoff1989.cu tersoff_modc.cu rebo_mos2.cu tersoff_mini.cu hessian.cu \
	box.cu cusolver_wrapper.cu mic.cu 

ifdef OS # for Windows
_OBJ = main_phonon.obj phonon.obj read_file.obj error.obj \
	atom.obj neighbor.obj neighbor_ON1.obj neighbor_ON2.obj \
	force.obj potential.obj lj.obj ri.obj eam.obj sw.obj vashishta.obj fcp.obj \
	tersoff1988.obj tersoff1989.obj tersoff_modc.obj rebo_mos2.obj tersoff_mini.obj hessian.obj \
	box.obj cusolver_wrapper.obj mic.obj 
else # for Linux
_OBJ = main_phonon.o phonon.o read_file.o error.o \
	atom.o neighbor.o neighbor_ON1.o neighbor_ON2.o \
	force.o potential.o lj.o ri.o eam.o sw.o vashishta.o fcp.o \
	tersoff1988.o tersoff1989.o tersoff_modc.o rebo_mos2.o tersoff_mini.o hessian.o \
	box.o cusolver_wrapper.o mic.o 
endif

HEADERS = phonon.cuh read_file.cuh error.cuh mic.cuh \
	common.cuh atom.cuh gpu_vector.cuh \
	force.cuh potential.cuh lj.cuh ri.cuh eam.cuh sw.cuh vashishta.cuh fcp.cuh \
	tersoff1988.cuh tersoff1989.cuh tersoff_modc.cuh rebo_mos2.cuh tersoff_mini.cuh hessian.cuh \
	box.cuh cusolver_wrapper.cuh 

ODIR = obj_phonon
OBJ = $(patsubst %,$(ODIR)/%,$(_OBJ))

all: phonon
	
ifdef OS # for Windows
$(ODIR)/%.obj: %.cu $(HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@
else # for Linux
$(ODIR)/%.o: %.cu $(HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@
endif

phonon: $(OBJ)
	$(CC) $^ -o $@ $(LFLAGS)

clean:
ifdef OS
	del $(ODIR)\*obj phonon.exe phonon.exp phonon.lib
else
	rm $(ODIR)/*o gpumd
endif

